AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Process uploaded CSV files and store data in DynamoDB

Resources:
  # S3 Bucket for uploading CSV files
  CsvBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "simple-csv-bucket-${AWS::AccountId}-${AWS::Region}"

  # DynamoDB Table to store extracted CSV data
  CsvTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: CsvDataTable
      PrimaryKey:
        Name: id  # Primary key for the table (e.g., a unique identifier)
        Type: String

  # Explicitly define the IAM role for the Lambda function
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaBasicPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow  # Basic logging
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow  # S3 read access
                Action: s3:GetObject
                Resource: !Sub "arn:aws:s3:::${CsvBucket}/*"
              - Effect: Allow  # DynamoDB write access
                Action: dynamodb:PutItem
                Resource: !GetAtt CsvTable.Arn

  # Lambda Function to process CSV files
  CsvProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CsvProcessor
      CodeUri: lambda/  # Folder containing your Lambda code (e.g., app.py)
      Handler: app.lambda_handler  # Entry point in your code
      Runtime: python3.9
      Timeout: 60  # 60 seconds timeout
      MemorySize: 512  # 512 MB memory
      Role: !GetAtt LambdaExecutionRole.Arn  # Use the explicitly defined role
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref CsvTable  # Reference to DynamoDB table
      Events:
        CsvUpload:
          Type: S3
          Properties:
            Bucket: !Ref CsvBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .csv  # Trigger only on CSV files
    DependsOn:
      - CsvBucket  # Ensure S3 bucket is created first
      - LambdaExecutionRole  # Ensure IAM role is created first

Outputs:
  UploadBucketName:
    Description: The S3 bucket for uploading CSV files
    Value: !Ref CsvBucket
  DynamoDBTableName:
    Description: The DynamoDB table for storing CSV data
    Value: !Ref CsvTable
