AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Process .txt files, store in DynamoDB, notify via SNS

Parameters:
  SnsEmail:
    Type: String
    Description: Email address to receive notifications

Resources:
  DocumentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "sam-txt-bucket-${AWS::AccountId}-${AWS::Region}"

  DocumentTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: DocumentTextTable
      PrimaryKey:
        Name: document_id
        Type: String

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: DocumentReportTopic

  SNSEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref SnsEmail
      Protocol: email
      TopicArn: !Ref SNSTopic

  DocumentProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TxtDocumentProcessor
      CodeUri: document_processor/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 60
      MemorySize: 512
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref DocumentTable
        - S3ReadPolicy:
            BucketName: !Ref DocumentBucket
        - SNSPublishMessagePolicy:
            TopicName: !Ref SNSTopic
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DocumentTable
          TOPIC_ARN: !Ref SNSTopic
      Events:
        TxtUpload:
          Type: S3
          Properties:
            Bucket: !Ref DocumentBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .txt

Outputs:
  UploadBucketName:
    Description: The S3 bucket where you upload .txt files
    Value: !Ref DocumentBucket
  SNSTopicARN:
    Description: SNS Topic ARN for notifications
    Value: !Ref SNSTopic
