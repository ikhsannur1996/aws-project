AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Complete Document Analytics System (PDF, TXT, CSV) deployed via AWS SAM

Parameters:
  SnsEmail:
    Type: String
    Description: Email address to subscribe to report notifications

Resources:
  ###########################################################
  #  S3 Bucket - Upload here to trigger pipeline
  ###########################################################
  DocumentBucket:
    Type: AWS::S3::Bucket
    Properties: {}

  ###########################################################
  #  DynamoDB Table - Store extracted text
  ###########################################################
  DocumentTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: DocumentTextTable
      PrimaryKey:
        Name: document_id
        Type: String

  ###########################################################
  #  SNS Topic + Email Subscription
  ###########################################################
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: DocumentReportTopic

  SNSEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref SnsEmail
      Protocol: email
      TopicArn: !Ref SNSTopic

  ###########################################################
  #  Lambda: Upload Notifier (triggered by file upload)
  ###########################################################
  UploadNotifierFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: uploadNotifier
      CodeUri: upload_notifier/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 15
      MemorySize: 128
      Policies:
        - AWSLambdaBasicExecutionRole
        - SNSPublishMessagePolicy:
            TopicName: !Ref SNSTopic
      Environment:
        Variables:
          TOPIC_ARN: !Ref SNSTopic
      Events:
        PdfUpload:
          Type: S3
          Properties:
            Bucket: !Ref DocumentBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .pdf
        TxtUpload:
          Type: S3
          Properties:
            Bucket: !Ref DocumentBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .txt
        CsvUpload:
          Type: S3
          Properties:
            Bucket: !Ref DocumentBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .csv

  ###########################################################
  #  Lambda: Document Extractor
  ###########################################################
  DocumentExtractorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: documentExtractor
      CodeUri: document_extractor/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 60
      MemorySize: 512
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: "arn:aws:s3:::*"
        - DynamoDBWritePolicy:
            TableName: !Ref DocumentTable
        - LambdaInvokePolicy:
            FunctionName: !Ref DocumentAnalyzerFunction
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DocumentTable
          ANALYZER_FUNCTION_NAME: !Ref DocumentAnalyzerFunction
      Events:
        ExtractorTrigger:
          Type: SNS
          Properties:
            Topic: !Ref SNSTopic

  ###########################################################
  #  Lambda: Document Analyzer
  ###########################################################
  DocumentAnalyzerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: documentAnalyzer
      CodeUri: document_analyzer/
      Handler: app.lambda_handler
      Runtime: python3.9
      Timeout: 30
      MemorySize: 256
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBReadPolicy:
            TableName: !Ref DocumentTable
        - SNSPublishMessagePolicy:
            TopicName: !Ref SNSTopic
      Environment:
        Variables:
          DYNAMODB_TABLE: !Ref DocumentTable
          TOPIC_ARN: !Ref SNSTopic

  ###########################################################
  #  Outputs
  ###########################################################
  S3UploadBucketName:
    Description: S3 bucket where documents should be uploaded
    Value: !Ref DocumentBucket

  SNSTopicARN:
    Description: ARN of the SNS Topic
    Value: !Ref SNSTopic
