AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Compress single or multiple images from S3 and send batch metadata email notifications with pre-signed URLs

Globals:
  Function:
    Timeout: 30
    Runtime: python3.12
    Environment:
      Variables:
        TARGET_BUCKET: !Sub "image-target-bucket-${AWS::AccountId}"

Resources:
  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "image-source-bucket-${AWS::AccountId}"

  TargetBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "image-target-bucket-${AWS::AccountId}"

  ImageNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Image Upload Notification

  ImageCompressLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: image-compress-lambda
      Handler: app.lambda_handler
      CodeUri: src/
      Policies:
        - AWSLambdaBasicExecutionRole
        - S3ReadPolicy:
            BucketName: !Ref SourceBucket
        - S3WritePolicy:
            BucketName: !Ref TargetBucket
        - SNSPublishMessagePolicy:
            TopicName: !Ref ImageNotificationTopic
      Environment:
        Variables:
          TARGET_BUCKET: !Ref TargetBucket
          SNS_TOPIC_ARN: !Ref ImageNotificationTopic
      Events:
        S3UploadEvent:
          Type: S3
          Properties:
            Bucket: !Ref SourceBucket
            Events: s3:ObjectCreated:*

Outputs:
  SourceBucketName:
    Value: !Ref SourceBucket
  TargetBucketName:
    Value: !Ref TargetBucket
  SNSTopicArn:
    Value: !Ref ImageNotificationTopic
